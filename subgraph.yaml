specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: KyberNetworkProxy
    network: mainnet
    source:
      address: "0x818E6FECD516Ecc3849DAf6845e3EC868087B755"
      abi: KyberNetworkProxy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        # - ExecuteTrade
        - KyberNetworkSet
        - TokenWithdraw
        - EtherWithdraw
        - TransferAdminPending
        - AdminClaimed
        - AlerterAdded
        - OperatorAdded
      abis:
        - name: KyberNetworkProxy
          file: ./abis/KyberNetworkProxy.json
      eventHandlers:
        # - event: ExecuteTrade(indexed address,address,address,uint256,uint256)
        #   handler: handleExecuteTrade
        - event: KyberNetworkSet(address,address)
          handler: handleKyberNetworkSet
        - event: TokenWithdraw(address,uint256,address)
          handler: handleTokenWithdraw
        - event: EtherWithdraw(uint256,address)
          handler: handleEtherWithdraw
        - event: TransferAdminPending(address)
          handler: handleTransferAdminPending
        - event: AdminClaimed(address,address)
          handler: handleAdminClaimed
        - event: AlerterAdded(address,bool)
          handler: handleAlerterAdded
        - event: OperatorAdded(address,bool)
          handler: handleOperatorAdded
      file: ./src/KyberNetworkProxy.ts
  - kind: ethereum/contract
    name: KyberNetwork
    network: mainnet
    source:
      address: "0x9ae49C0d7F8F9EF4B864e004FE86Ac8294E20950"
      abi: KyberNetwork
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - AddReserveToNetwork
        - ListReservePairs
        # - KyberTrade
        - EtherReceival
      abis:
        - name: KyberNetwork
          file: ./abis/KyberNetwork.json
        - name: KyberReserve
          file: ./abis/KyberReserve.json
        - name: OrderbookReserve
          file: ./abis/OrderbookReserve.json
      eventHandlers:
        - event: AddReserveToNetwork(indexed address,bool,bool)
          handler: handleAddReserveToNetwork
        - event: ListReservePairs(indexed address,address,address,bool)
          handler: handleListReservePairs
        - event: EtherReceival(indexed address,uint256)
          handler: handleEtherReceival
        # - event: KyberTrade(indexed address,address,address,uint256,uint256,address,uint256,address,address,bytes)
        #   handler: handleKyberTrade
      file: ./src/KyberNetwork.ts
templates:
  - name: KyberReserve
    kind: ethereum/contract
    network: mainnet
    source:
      abi: KyberReserve
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      file: ./src/KyberReserve.ts
      entities:
        - KyberReserve
      abis:
        - name: KyberReserve
          file: ./abis/KyberReserve.json
      eventHandlers:
        - event: DepositToken(address,uint256)
          handler: handleDepositToken
  - name: OrderbookReserve
    kind: ethereum/contract
    network: mainnet
    source:
      abi: OrderbookReserve
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.1
      language: wasm/assemblyscript
      file: ./src/OrderbookReserve.ts
      entities:
        - OrderbookReserve
      abis:
        - name: OrderbookReserve
          file: ./abis/OrderbookReserve.json
      eventHandlers:
        - event: TokenDeposited(indexed address,uint256)
          handler: handleTokenDeposited
